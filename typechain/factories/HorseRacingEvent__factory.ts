/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HorseRacingEvent,
  HorseRacingEventInterface,
} from "../HorseRacingEvent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_horsesNFTAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "horseOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "horseId",
        type: "uint256",
      },
    ],
    name: "HorseEnteredRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "horseOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "horseId",
        type: "uint256",
      },
    ],
    name: "HorseWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numWinners",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "prizeDistribution",
        type: "uint256[]",
      },
    ],
    name: "RaceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "winningHorseId",
        type: "uint256[]",
      },
    ],
    name: "RaceEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "RaceStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numWinners",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "prizeDistribution",
        type: "uint256[]",
      },
    ],
    name: "createRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "winningHorseIds",
        type: "uint256[]",
      },
    ],
    name: "endRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "horseId",
        type: "uint256",
      },
    ],
    name: "enterHorseInRace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "getIsActiveRace",
    outputs: [
      {
        internalType: "bool",
        name: "raceActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "getRaceResults",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "horsesNFTContract",
    outputs: [
      {
        internalType: "contract HorsesNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextRaceId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPrizePool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numWinners",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minParticipants",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "raceActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "raceStarted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "startRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160035534801561001557600080fd5b50604051611308380380611308833981016040819052610034916100b2565b61003d33610062565b600180546001600160a01b0319166001600160a01b03929092169190911790556100e2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c457600080fd5b81516001600160a01b03811681146100db57600080fd5b9392505050565b611217806100f16000396000f3fe6080604052600436106100a75760003560e01c8063924c855a11610064578063924c855a146101f5578063d9b8fd8f14610225578063e204761714610249578063f2fde38b14610269578063f76bdb1a14610289578063fa47723a146102b657600080fd5b80631316b05d146100ac57806324d822bf146100e9578063315aa38c1461010b578063715018a61461012b5780637bbc469e146101405780638da5cb5b146101d7575b600080fd5b3480156100b857600080fd5b506001546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f557600080fd5b50610109610104366004610e97565b6102c9565b005b34801561011757600080fd5b50610109610126366004610f61565b6103c3565b34801561013757600080fd5b50610109610661565b34801561014c57600080fd5b5061019e61015b366004610e97565b6002602081905260009182526040909120805460018201549282015460038301546005840154600690940154929493919290919060ff8082169161010090041687565b6040805197885260208801969096529486019390935260608501919091526080840152151560a0830152151560c082015260e0016100e0565b3480156101e357600080fd5b506000546001600160a01b03166100cc565b34801561020157600080fd5b50610215610210366004610e97565b610675565b60405190151581526020016100e0565b34801561023157600080fd5b5061023b60035481565b6040519081526020016100e0565b34801561025557600080fd5b50610109610264366004610fa8565b6106d7565b34801561027557600080fd5b5061010961028436600461100d565b610a1c565b34801561029557600080fd5b506102a96102a4366004610e97565b610a95565b6040516100e0919061106c565b6101096102c436600461107f565b610b55565b6102d1610d19565b6000818152600260205260409020600681015460ff1680156102fd57506006810154610100900460ff16155b6103225760405162461bcd60e51b8152600401610319906110a1565b60405180910390fd5b6005810154600882015410156103745760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f756768207061727469636970616e747360481b6044820152606401610319565b60068101805461ff0019166101001790556040517fd8a537561d247cabc83980738b2fd3771513f9b3a4b696b3fead967d36efe7da906103b79084815260200190565b60405180910390a15050565b6103cb610d19565b60008281526002602052604090206006810154610100900460ff166104255760405162461bcd60e51b815260206004820152601060248201526f149858d9481b9bdd081cdd185c9d195960821b6044820152606401610319565b80600301548251146104795760405162461bcd60e51b815260206004820152601b60248201527f496e636f7272656374206e756d626572206f662077696e6e65727300000000006044820152606401610319565b6005810154600882015410156104cb5760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f756768207061727469636970616e747360481b6044820152606401610319565b60068101805461ffff1916905581516104ed9060078301906020850190610e37565b50600060648260020154605061050391906110f9565b61050d9190611110565b905060005b8260030154811015610621576000606484600401838154811061053757610537611132565b90600052602060002001548461054d91906110f9565b6105579190611110565b9050600061057d86848151811061057057610570611132565b6020026020010151610d73565b90506001600160a01b0381166105d55760405162461bcd60e51b815260206004820152601860248201527f57696e6e6572206e6f7420666f756e6420696e207261636500000000000000006044820152606401610319565b6040516001600160a01b0382169083156108fc029084906000818181858888f1935050505015801561060b573d6000803e3d6000fd5b505050808061061990611148565b915050610512565b507f7aed510e5c2fdcd342c5cef991b106a3986e8d20d22e489ae5c9a0d18d5971528484604051610653929190611161565b60405180910390a150505050565b610669610d19565b6106736000610de7565b565b600060035482106106be5760405162461bcd60e51b8152602060048201526013602482015272149858d948191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610319565b5060009081526002602052604090206006015460ff1690565b6106df610d19565b8051600090815b818110156107275783818151811061070057610700611132565b6020026020010151836107139190611182565b92508061071f81611148565b9150506106e6565b5060648211156107795760405162461bcd60e51b815260206004820152601f60248201527f546f74616c20646973747269627574696f6e20657863656564732031303025006044820152606401610319565b8381146107da5760405162461bcd60e51b815260206004820152602960248201527f446973747269627574696f6e206d757374206d61746368206e756d626572206f604482015268662077696e6e65727360b81b6064820152608401610319565b60146107e78560026110f9565b11156108355760405162461bcd60e51b815260206004820152601960248201527f4d6178207061727469636970616e7473206578636565646564000000000000006044820152606401610319565b60056108428560026110f9565b10156108905760405162461bcd60e51b815260206004820152601860248201527f4d696e207061727469636970616e7473206e6f74206d657400000000000000006044820152606401610319565b6040518061014001604052806003548152602001868152602001600081526020018581526020018481526020018560026108ca91906110f9565b81526001602080830182905260006040808501829052805182815280840182526060808701919091528151838152808501835260809687015260038054845260028086529383902088518155888601519681019690965591870151928501929092559085015190830155918301518051919261094e92600485019290910190610e37565b5060a0820151600582015560c082015160068201805460e085015161ffff1990911692151561ff00191692909217610100921515830217905582015180516109a0916007840191602090910190610e37565b5061012082015180516109bd916008840191602090910190610e37565b509050507fd353319d8f5cef7e55b32e749160eb2a2d9ee2076bea05ff3a44c760c39291056003548686866040516109f89493929190611195565b60405180910390a160038054906000610a1083611148565b91905055505050505050565b610a24610d19565b6001600160a01b038116610a895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610319565b610a9281610de7565b50565b60008181526002602052604090206006015460609060ff16610af25760405162461bcd60e51b8152602060048201526016602482015275149858d9481a185cc81b9bdd08195b991959081e595d60521b6044820152606401610319565b60008281526002602090815260409182902060070180548351818402810184019094528084529091830182828015610b4957602002820191906000526020600020905b815481526020019060010190808311610b35575b50505050509050919050565b6000828152600260205260409020600681015460ff168015610b8157506006810154610100900460ff16155b610b9d5760405162461bcd60e51b8152600401610319906110a1565b6001546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a91906111c4565b6001600160a01b031614610c565760405162461bcd60e51b81526020600482015260136024820152722737ba103a3432903437b939b29037bbb732b960691b6044820152606401610319565b80600101543414610c9f5760405162461bcd60e51b8152602060048201526013602482015272496e636f727265637420656e7472792066656560681b6044820152606401610319565b34816002016000828254610cb39190611182565b909155505060088101805460018101825560009182526020918290200183905560408051858152339281019290925281018390527f9ce334b4c8b04bea9c08533da5d64964ae1e53e1c9152c5749044adad3f62b289060600160405180910390a1505050565b6000546001600160a01b031633146106735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610319565b6001546040516331a9108f60e11b8152600481018390526000916001600160a01b031690636352211e90602401602060405180830381865afa158015610dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de191906111c4565b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610e72579160200282015b82811115610e72578251825591602001919060010190610e57565b50610e7e929150610e82565b5090565b5b80821115610e7e5760008155600101610e83565b600060208284031215610ea957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ed757600080fd5b8135602067ffffffffffffffff80831115610ef457610ef4610eb0565b8260051b604051601f19603f83011681018181108482111715610f1957610f19610eb0565b604052938452858101830193838101925087851115610f3757600080fd5b83870191505b84821015610f5657813583529183019190830190610f3d565b979650505050505050565b60008060408385031215610f7457600080fd5b82359150602083013567ffffffffffffffff811115610f9257600080fd5b610f9e85828601610ec6565b9150509250929050565b600080600060608486031215610fbd57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610fe257600080fd5b610fee86828701610ec6565b9150509250925092565b6001600160a01b0381168114610a9257600080fd5b60006020828403121561101f57600080fd5b813561102a81610ff8565b9392505050565b600081518084526020808501945080840160005b8381101561106157815187529582019590820190600101611045565b509495945050505050565b60208152600061102a6020830184611031565b6000806040838503121561109257600080fd5b50508035926020909101359150565b60208082526022908201527f52616365206e6f7420616374697665206f7220616c7265616479207374617274604082015261195960f21b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610de157610de16110e3565b60008261112d57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60006001820161115a5761115a6110e3565b5060010190565b82815260406020820152600061117a6040830184611031565b949350505050565b80820180821115610de157610de16110e3565b8481528360208201528260408201526080606082015260006111ba6080830184611031565b9695505050505050565b6000602082840312156111d657600080fd5b815161102a81610ff856fea26469706673582212202b055ca7ba71d90663ff3237530cd831f24b567c045e68f15212d77c6cecdc0d64736f6c63430008150033";

export class HorseRacingEvent__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _horsesNFTAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HorseRacingEvent> {
    return super.deploy(
      _horsesNFTAddress,
      overrides || {}
    ) as Promise<HorseRacingEvent>;
  }
  getDeployTransaction(
    _horsesNFTAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_horsesNFTAddress, overrides || {});
  }
  attach(address: string): HorseRacingEvent {
    return super.attach(address) as HorseRacingEvent;
  }
  connect(signer: Signer): HorseRacingEvent__factory {
    return super.connect(signer) as HorseRacingEvent__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HorseRacingEventInterface {
    return new utils.Interface(_abi) as HorseRacingEventInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HorseRacingEvent {
    return new Contract(address, _abi, signerOrProvider) as HorseRacingEvent;
  }
}
