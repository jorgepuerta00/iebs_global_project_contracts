/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AvatarRaceEvent,
  AvatarRaceEventInterface,
} from "../AvatarRaceEvent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "winningIds",
        type: "uint256[]",
      },
    ],
    name: "MatchEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "MatchStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numWinners",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "prizeDistribution",
        type: "uint256[]",
      },
    ],
    name: "RaceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "avatarOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "RacerEnteredMatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_prizeDistribution",
        type: "uint256[]",
      },
    ],
    name: "createRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raceId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_winningIds",
        type: "uint256[]",
      },
    ],
    name: "endMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "enterRacerInRace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raceId",
        type: "uint256",
      },
    ],
    name: "getMatchStatus",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raceId",
        type: "uint256",
      },
    ],
    name: "getRaceResults",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raceId",
        type: "uint256",
      },
    ],
    name: "isEndedMatch",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftToken",
    outputs: [
      {
        internalType: "contract AvatarNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPrizePool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numWinners",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minParticipants",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raceId",
        type: "uint256",
      },
    ],
    name: "startMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161145038038061145083398101604081905261002f916100ba565b6100383361006a565b6000805460ff60a01b19169055600180546001600160a01b0319166001600160a01b03929092169190911790556100ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cc57600080fd5b81516001600160a01b03811681146100e357600080fd5b9392505050565b611357806100f96000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063d06fcba811610059578063d06fcba8146102cd578063dee1f3f1146102ed578063f2fde38b1461030d578063f76bdb1a1461032d57600080fd5b80638da5cb5b1461023b5780638fa03b481461026d578063a1432c531461028d578063bf725a84146102ad57600080fd5b8063715018a6116100c6578063715018a6146101475780637bbc469e1461015c5780637d6d1748146102065780638456cb591461022657600080fd5b80633a1a2604146100ed5780633f4ba83a146101025780635c975abb14610117575b600080fd5b6101006100fb36600461105e565b61035a565b005b34801561010e57600080fd5b50610100610501565b34801561012357600080fd5b50600054600160a01b900460ff165b60405190151581526020015b60405180910390f35b34801561015357600080fd5b50610100610513565b34801561016857600080fd5b506101c5610177366004611080565b600360208190526000918252604090912080546001820154600283015493830154600584015460069094015492949193919290919060ff808216916101008104821691620100009091041688565b6040805198895260208901979097529587019490945260608601929092526080850152151560a0840152151560c0830152151560e08201526101000161013e565b34801561021257600080fd5b506101006102213660046110af565b610525565b34801561023257600080fd5b50610100610774565b34801561024757600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161013e565b34801561027957600080fd5b506101006102883660046110af565b610784565b34801561029957600080fd5b506101326102a8366004611080565b610a7e565b3480156102b957600080fd5b506101006102c8366004611080565b610aee565b3480156102d957600080fd5b50600154610255906001600160a01b031681565b3480156102f957600080fd5b50610132610308366004611080565b610bd8565b34801561031957600080fd5b5061010061032836600461118e565b610c5c565b34801561033957600080fd5b5061034d610348366004611080565b610cd5565b60405161013e91906111e7565b610362610da2565b600082815260036020526040902061037983610bd8565b61039e5760405162461bcd60e51b8152600401610395906111fa565b60405180910390fd5b336103a883610def565b6001600160a01b0316146103ea5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610395565b806001015434146104335760405162461bcd60e51b8152602060048201526013602482015272496e636f727265637420656e7472792066656560681b6044820152606401610395565b60088101546014116104875760405162461bcd60e51b815260206004820152601960248201527f4d6178207061727469636970616e7473206578636565646564000000000000006044820152606401610395565b3481600201600082825461049b9190611252565b909155505060088101805460018101825560009182526020918290200183905560408051858152339281019290925281018390527f5b59ca4b3b9e33d358076479e1c1971fa6bfbed08841017e9865bb86e8bd41879060600160405180910390a1505050565b610509610e6c565b610511610ec6565b565b61051b610e6c565b6105116000610f1b565b61052d610e6c565b610535610da2565b60008281526003602052604090206006810154610100900460ff1661058f5760405162461bcd60e51b815260206004820152601060248201526f149858d9481b9bdd081cdd185c9d195960821b6044820152606401610395565b80600301548251146105e35760405162461bcd60e51b815260206004820152601b60248201527f496e636f7272656374206e756d626572206f662077696e6e65727300000000006044820152606401610395565b60068101805462ffffff191662010000179055815161060b9060078301906020850190610ffe565b5060006064826002015460506106219190611265565b61062b919061127c565b905060005b826003015481101561073457600060648460040183815481106106555761065561129e565b90600052602060002001548461066b9190611265565b610675919061127c565b9050600061069b86848151811061068e5761068e61129e565b6020026020010151610def565b90506001600160a01b0381166106f35760405162461bcd60e51b815260206004820152601860248201527f57696e6e6572206e6f7420666f756e6420696e207261636500000000000000006044820152606401610395565b6040516001600160a01b0382169083156108fc029084906000818181858888f19350505050158015610729573d6000803e3d6000fd5b505050600101610630565b507fa825012d43998fffb4f7c88942d56d79e33a5a1f46bcdcc5fbadcb05dbceec4f84846040516107669291906112b4565b60405180910390a150505050565b61077c610e6c565b610511610f6b565b61078c610e6c565b610794610da2565b8051600090815b83518110156107d3578381815181106107b6576107b661129e565b6020026020010151836107c99190611252565b925060010161079b565b5060648211156108255760405162461bcd60e51b815260206004820152601f60248201527f546f74616c20646973747269627574696f6e20657863656564732031303025006044820152606401610395565b60648210156108805760405162461bcd60e51b815260206004820152602160248201527f546f74616c20646973747269627574696f6e206c657373207468616e203130306044820152602560f81b6064820152608401610395565b60058111156108c95760405162461bcd60e51b815260206004820152601560248201527413585e080d481dda5b9b995c9cc8185b1b1bddd959605a1b6044820152606401610395565b60006108d460025490565b90506040518061016001604052808281526020018681526020016000815260200183815260200185815260200183600361090e9190611265565b8152600160208083019190915260006040808401829052606084018290528051828152808401825260808501528051828152928301905260a09092019150905260008281526003602081815260409283902084518155848201516001820155928401516002840155606084015191830191909155608083015180516109999260048501920190610ffe565b5060a0820151600582015560c082015160068201805460e08501516101008087015161ffff1990931694151561ff001916949094179015159093029290921762ff0000191662010000921515929092029190911790556101208201518051610a0b916007840191602090910190610ffe565b506101408201518051610a28916008840191602090910190610ffe565b509050507fd353319d8f5cef7e55b32e749160eb2a2d9ee2076bea05ff3a44c760c392910581868487604051610a6194939291906112d5565b60405180910390a1610a77600280546001019055565b5050505050565b6000610a88610da2565b6002548210610acf5760405162461bcd60e51b8152602060048201526013602482015272149858d948191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610395565b5060009081526003602052604090206006015462010000900460ff1690565b610af6610e6c565b610afe610da2565b6000818152600360205260409020610b1582610bd8565b610b315760405162461bcd60e51b8152600401610395906111fa565b600581015460088201541015610b895760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768207061727469636970616e74730000000000000000006044820152606401610395565b60068101805461ff0019166101001790556040517fb94815bc897678aff1a4b2af4335727acb3b957640bdb895415ba9b79ada1e2e90610bcc9084815260200190565b60405180910390a15050565b6000610be2610da2565b6002548210610c295760405162461bcd60e51b8152602060048201526013602482015272149858d948191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610395565b6000828152600360205260409020600681015460ff168015610c5557506006810154610100900460ff16155b9392505050565b610c64610e6c565b6001600160a01b038116610cc95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610395565b610cd281610f1b565b50565b6060610cdf610da2565b60008281526003602052604090206006015462010000900460ff16610d3f5760405162461bcd60e51b8152602060048201526016602482015275149858d9481a185cc81b9bdd08195b991959081e595d60521b6044820152606401610395565b60008281526003602090815260409182902060070180548351818402810184019094528084529091830182828015610d9657602002820191906000526020600020905b815481526020019060010190808311610d82575b50505050509050919050565b600054600160a01b900460ff16156105115760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610395565b6000610df9610da2565b6001546040516331a9108f60e11b8152600481018490526001600160a01b0390911690636352211e90602401602060405180830381865afa158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e669190611304565b92915050565b6000546001600160a01b031633146105115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610395565b610ece610fae565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f73610da2565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610efe3390565b600054600160a01b900460ff166105115760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610395565b828054828255906000526020600020908101928215611039579160200282015b8281111561103957825182559160200191906001019061101e565b50611045929150611049565b5090565b5b80821115611045576000815560010161104a565b6000806040838503121561107157600080fd5b50508035926020909101359150565b60006020828403121561109257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156110c257600080fd5b8235915060208084013567ffffffffffffffff808211156110e257600080fd5b818601915086601f8301126110f657600080fd5b81358181111561110857611108611099565b8060051b604051601f19603f8301168101818110858211171561112d5761112d611099565b60405291825284820192508381018501918983111561114b57600080fd5b938501935b8285101561116957843584529385019392850192611150565b8096505050505050509250929050565b6001600160a01b0381168114610cd257600080fd5b6000602082840312156111a057600080fd5b8135610c5581611179565b60008151808452602080850194506020840160005b838110156111dc578151875295820195908201906001016111c0565b509495945050505050565b602081526000610c5560208301846111ab565b60208082526022908201527f52616365206e6f7420616374697665206f7220616c7265616479207374617274604082015261195960f21b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610e6657610e6661123c565b8082028115828204841417610e6657610e6661123c565b60008261129957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b8281526040602082015260006112cd60408301846111ab565b949350505050565b8481528360208201528260408201526080606082015260006112fa60808301846111ab565b9695505050505050565b60006020828403121561131657600080fd5b8151610c558161117956fea26469706673582212207dbfb9f4944abd8e5a07b86f0d6633d76695b51ae25719fe8336ac42522abd9564736f6c63430008170033";

export class AvatarRaceEvent__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nftContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AvatarRaceEvent> {
    return super.deploy(
      _nftContractAddress,
      overrides || {}
    ) as Promise<AvatarRaceEvent>;
  }
  getDeployTransaction(
    _nftContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nftContractAddress, overrides || {});
  }
  attach(address: string): AvatarRaceEvent {
    return super.attach(address) as AvatarRaceEvent;
  }
  connect(signer: Signer): AvatarRaceEvent__factory {
    return super.connect(signer) as AvatarRaceEvent__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AvatarRaceEventInterface {
    return new utils.Interface(_abi) as AvatarRaceEventInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AvatarRaceEvent {
    return new Contract(address, _abi, signerOrProvider) as AvatarRaceEvent;
  }
}
