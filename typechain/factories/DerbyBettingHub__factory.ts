/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DerbyBettingHub,
  DerbyBettingHubInterface,
} from "../DerbyBettingHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_racingEventAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "winnings",
        type: "uint256",
      },
    ],
    name: "BetClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "betAmount",
        type: "uint256",
      },
    ],
    name: "BetPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "betsByRace",
    outputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "betAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "betIndex",
        type: "uint256",
      },
    ],
    name: "claimWinnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "horseIds",
        type: "uint256[]",
      },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "racingEvent",
    outputs: [
      {
        internalType: "contract HorseRacingEvent",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e3f380380610e3f83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610d53806100ec6000396000f3fe6080604052600436106100705760003560e01c8063715018a61161004e578063715018a6146101045780638da5cb5b146101195780639d6d10da1461014b578063f2fde38b1461016b57600080fd5b8063286db5c21461007557806330d14655146100975780634f36ed09146100aa575b600080fd5b34801561008157600080fd5b50610095610090366004610a7a565b61018b565b005b6100956100a5366004610b07565b61040f565b3480156100b657600080fd5b506100ca6100c5366004610a7a565b6105ad565b6040516100fb949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b60405180910390f35b34801561011057600080fd5b50610095610604565b34801561012557600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100fb565b34801561015757600080fd5b50600154610133906001600160a01b031681565b34801561017757600080fd5b50610095610186366004610ba9565b610618565b60008281526002602052604081208054839081106101ab576101ab610bd9565b600091825260209091206003600490920201908101549091506001600160a01b031633146102115760405162461bcd60e51b815260206004820152600e60248201526d2737ba103a3432903132ba3a37b960911b60448201526064015b60405180910390fd5b6003810154600160a01b900460ff161561026d5760405162461bcd60e51b815260206004820152601860248201527f57696e6e696e677320616c726561647920636c61696d656400000000000000006044820152606401610208565b600154604051637bb5ed8d60e11b8152600481018590526000916001600160a01b03169063f76bdb1a90602401600060405180830381865afa1580156102b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102df9190810190610bef565b9050600061038b836040518060a0016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561034b57602002820191906000526020600020905b815481526020019060010190808311610337575b5050509183525050600282015460208201526003909101546001600160a01b0381166040830152600160a01b900460ff1615156060909101528387610691565b60038401805460ff60a01b1916600160a01b179055604051909150339082156108fc029083906000818181858888f193505050501580156103d0573d6000803e3d6000fd5b50604051818152339086907fad65ef4ba28f4ce1aaee7e8f86645eb4ce0ddc8b6c8fa2821564a94dbd2485fe9060200160405180910390a35050505050565b60015460405163492642ad60e11b8152600481018490526001600160a01b039091169063924c855a90602401602060405180830381865afa158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c9190610c80565b6104bd5760405162461bcd60e51b815260206004820152601260248201527152616365206973206e6f742061637469766560701b6044820152606401610208565b6000828152600260209081526040808320815160a081018352868152808401868152349382019390935233606082015260808101859052815460018181018455928652948490208151600490960201948555915180519294936105269392850192910190610a1a565b5060408281015160028301556060830151600390920180546080909401511515600160a01b026001600160a81b03199094166001600160a01b039093169290921792909217905551339083907f87b9df6fa7123c2e6044c3a3a37b4b0662c188d7a58ef86ee55067c46e4613ad906105a19034815260200190565b60405180910390a35050565b600260205281600052604060002081815481106105c957600080fd5b60009182526020909120600490910201805460028201546003909201549093509091506001600160a01b03811690600160a01b900460ff1684565b61060c610742565b610616600061079c565b565b610620610742565b6001600160a01b0381166106855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610208565b61068e8161079c565b50565b815160208401515160009182910361073a57600160005b86602001515181101561070d578581815181106106c7576106c7610bd9565b6020026020010151876020015182815181106106e5576106e5610bd9565b6020026020010151146106fb576000915061070d565b8061070581610cb8565b9150506106a8565b5080156107385760006107248760200151866107ec565b905061073487604001518261096b565b9250505b505b949350505050565b6000546001600160a01b031633146106165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610208565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600260209081526040808320805482518185028101850190935280835284938493929190849084015b828210156108e357838290600052602060002090600402016040518060a0016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561089657602002820191906000526020600020905b815481526020019060010190808311610882575b505050918352505060028201546020808301919091526003909201546001600160a01b0381166040830152600160a01b900460ff161515606090910152908252600192909201910161081a565b50505050905060005b815181101561095f5761091c82828151811061090a5761090a610bd9565b6020026020010151602001518761099c565b1561094d5781818151811061093357610933610bd9565b6020026020010151604001518361094a9190610cd1565b92505b8061095781610cb8565b9150506108ec565b50909150505b92915050565b60008282111561099157610980600284610ce4565b61098a9084610cd1565b9050610965565b61098a836002610d06565b600081518351146109af57506000610965565b60005b8351811015610a10578281815181106109cd576109cd610bd9565b60200260200101518482815181106109e7576109e7610bd9565b6020026020010151146109fe576000915050610965565b80610a0881610cb8565b9150506109b2565b5060019392505050565b828054828255906000526020600020908101928215610a55579160200282015b82811115610a55578251825591602001919060010190610a3a565b50610a61929150610a65565b5090565b5b80821115610a615760008155600101610a66565b60008060408385031215610a8d57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610adb57610adb610a9c565b604052919050565b600067ffffffffffffffff821115610afd57610afd610a9c565b5060051b60200190565b60008060408385031215610b1a57600080fd5b8235915060208084013567ffffffffffffffff811115610b3957600080fd5b8401601f81018613610b4a57600080fd5b8035610b5d610b5882610ae3565b610ab2565b81815260059190911b82018301908381019088831115610b7c57600080fd5b928401925b82841015610b9a57833582529284019290840190610b81565b80955050505050509250929050565b600060208284031215610bbb57600080fd5b81356001600160a01b0381168114610bd257600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b60006020808385031215610c0257600080fd5b825167ffffffffffffffff811115610c1957600080fd5b8301601f81018513610c2a57600080fd5b8051610c38610b5882610ae3565b81815260059190911b82018301908381019087831115610c5757600080fd5b928401925b82841015610c7557835182529284019290840190610c5c565b979650505050505050565b600060208284031215610c9257600080fd5b81518015158114610bd257600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610cca57610cca610ca2565b5060010190565b8082018082111561096557610965610ca2565b600082610d0157634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761096557610965610ca256fea2646970667358221220a2e1dd6b3e39666d988836c3d8ac43a6a3841fd7ac689102f317ffa9512a789764736f6c63430008150033";

export class DerbyBettingHub__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _racingEventAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DerbyBettingHub> {
    return super.deploy(
      _racingEventAddress,
      overrides || {}
    ) as Promise<DerbyBettingHub>;
  }
  getDeployTransaction(
    _racingEventAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_racingEventAddress, overrides || {});
  }
  attach(address: string): DerbyBettingHub {
    return super.attach(address) as DerbyBettingHub;
  }
  connect(signer: Signer): DerbyBettingHub__factory {
    return super.connect(signer) as DerbyBettingHub__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DerbyBettingHubInterface {
    return new utils.Interface(_abi) as DerbyBettingHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DerbyBettingHub {
    return new Contract(address, _abi, signerOrProvider) as DerbyBettingHub;
  }
}
