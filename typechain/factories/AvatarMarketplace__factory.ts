/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AvatarMarketplace,
  AvatarMarketplaceInterface,
} from "../AvatarMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_commissionPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newCommissionPercentage",
        type: "uint256",
      },
    ],
    name: "CommissionPercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newNFTContractAddress",
        type: "address",
      },
    ],
    name: "NFTContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "status",
        type: "string",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "status",
        type: "string",
      },
    ],
    name: "NFTListingCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "status",
        type: "string",
      },
    ],
    name: "NFTPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numberOfNFTs",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "NFTsPurchasedPackage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "PurchasedExistingNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSiliquaCoinAddress",
        type: "address",
      },
    ],
    name: "SiliquaCoinUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "commissionPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveListings",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct AvatarMarketplace.Listing[]",
        name: "activeListings",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "listingId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "mintCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftToken",
    outputs: [
      {
        internalType: "contract AvatarNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "copyTokenId",
        type: "string",
      },
    ],
    name: "purchaseExistingNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
    ],
    name: "purchaseNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numberOfNFTs",
        type: "uint256",
      },
    ],
    name: "purchaseNFTsPackage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMintPrice",
        type: "uint256",
      },
    ],
    name: "setMintPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
    ],
    name: "setNFTContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCommissionEarned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCommissionPercentage",
        type: "uint256",
      },
    ],
    name: "updateCommissionPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060065567016345785d8a000060075534801561002157600080fd5b5060405162001b5b38038062001b5b833981016040819052610042916100cd565b61004b3361007d565b60018055600280546001600160a01b03909316610100026001600160a81b031990931692909217909155600355610107565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100e057600080fd5b82516001600160a01b03811681146100f757600080fd5b6020939093015192949293505050565b611a4480620001176000396000f3fe6080604052600436106101815760003560e01c80638da5cb5b116100d1578063c73cdd231161008a578063de74e57b11610064578063de74e57b14610449578063f23a6e61146104d2578063f2fde38b146104fe578063f4a0a5281461051e57600080fd5b8063c73cdd23146103f8578063d06fcba81461040e578063d575fe641461043357600080fd5b80638da5cb5b146103185780639405dfdd1461034a57806394383f1414610360578063a7ccabdf14610380578063ae872c53146103a0578063bc197c81146103b357600080fd5b80635c975abb1161013e578063715018a611610118578063715018a6146102ac5780638456cb59146102c157806387c35bc0146102d65780638ce2199e146102f857600080fd5b80635c975abb1461023857806360a2fcf3146102505780636817c76c1461029657600080fd5b806301ffc9a7146101865780630500b382146101bb578063150bde03146101d05780632e1a7d4d146101e3578063305a67a8146102035780633f4ba83a14610223575b600080fd5b34801561019257600080fd5b506101a66101a13660046114dd565b61053e565b60405190151581526020015b60405180910390f35b6101ce6101c93660046115ad565b610575565b005b6101ce6101de3660046115fe565b610727565b3480156101ef57600080fd5b506101ce6101fe3660046115fe565b6109db565b34801561020f57600080fd5b506101ce61021e3660046115fe565b610a14565b34801561022f57600080fd5b506101ce610c0a565b34801561024457600080fd5b5060025460ff166101a6565b34801561025c57600080fd5b5061028861026b3660046115ad565b805160208183018101805160088252928201919093012091525481565b6040519081526020016101b2565b3480156102a257600080fd5b5061028860075481565b3480156102b857600080fd5b506101ce610c1c565b3480156102cd57600080fd5b506101ce610c2e565b3480156102e257600080fd5b506102eb610c3e565b6040516101b29190611617565b34801561030457600080fd5b506101ce6103133660046115fe565b610dce565b34801561032457600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101b2565b34801561035657600080fd5b5061028860065481565b34801561036c57600080fd5b506101ce61037b366004611690565b610e6a565b34801561038c57600080fd5b506101ce61039b3660046116c7565b611094565b6101ce6103ae3660046115fe565b6110f6565b3480156103bf57600080fd5b506103df6103ce366004611784565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016101b2565b34801561040457600080fd5b5061028860045481565b34801561041a57600080fd5b506002546103329061010090046001600160a01b031681565b34801561043f57600080fd5b5061028860035481565b34801561045557600080fd5b506104a06104643660046115fe565b6005602052600090815260409020805460018201546002830154600384015460049094015492936001600160a01b039092169290919060ff1685565b604080519586526001600160a01b0390941660208601529284019190915260608301521515608082015260a0016101b2565b3480156104de57600080fd5b506103df6104ed366004611832565b63f23a6e6160e01b95945050505050565b34801561050a57600080fd5b506101ce6105193660046116c7565b611239565b34801561052a57600080fd5b506101ce6105393660046115fe565b6112af565b60006001600160e01b03198216630271189760e51b148061056f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b61057d6112bc565b610585611315565b600060088260405161059791906118bf565b90815260200160405180910390205460016105b291906118f1565b905060006105c182600a611904565b9050600060646105d183826118f1565b6007546105de9190611904565b6105e8919061191b565b905080341461064c5760405162461bcd60e51b815260206004820152602560248201527f4d7573742073656e642074686520657861637420707269636520666f72207468604482015264194813919560da1b60648201526084015b60405180910390fd5b8260088560405161065d91906118bf565b90815260405190819003602001812091909155600254632103c24960e21b82526001600160a01b03610100909104169063840f0924906106a39033908890600401611969565b600060405180830381600087803b1580156106bd57600080fd5b505af11580156106d1573d6000803e3d6000fd5b50505050336001600160a01b03167fb92f75638cf60a64a839863177bc8796a78cab4685220f7c1bff78437b1853c9858360405161071092919061198d565b60405180910390a250505061072460018055565b50565b61072f6112bc565b610737611315565b600654811061077b5760405162461bcd60e51b815260206004820152601060248201526f125108191bd95cdb89dd08195e1a5cdd60821b6044820152606401610643565b6000818152600560205260409020600481015460ff166107d55760405162461bcd60e51b81526020600482015260156024820152744c697374696e67206973206e6f742061637469766560581b6044820152606401610643565b8060030154341461081a5760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420707269636560881b6044820152606401610643565b6000606460035483600301546108309190611904565b61083a919061191b565b9050806004600082825461084e91906118f1565b9091555050600080546040516001600160a01b039091169183156108fc02918491818181858888f1935050505015801561088c573d6000803e3d6000fd5b50600081836003015461089f91906119af565b60018401546040519192506001600160a01b03169082156108fc029083906000818181858888f193505050501580156108dc573d6000803e3d6000fd5b506002805490840154604051632142170760e11b815230600482015233602482015260448101919091526101009091046001600160a01b0316906342842e0e90606401600060405180830381600087803b15801561093957600080fd5b505af115801561094d573d6000803e3d6000fd5b5050505060048301805460ff1916905560018301546002840154604080519182523460208301526060828201819052600990830152681c1d5c98da185cd95960ba1b6080830152516001600160a01b0390921691339187917f12c5db205c15a58219d216eea2f3362efc64a7e2db9a9b7237eae6ea6e6e30049181900360a00190a450505061072460018055565b6109e361135b565b604051339082156108fc029083906000818181858888f19350505050158015610a10573d6000803e3d6000fd5b5050565b610a1c611315565b6006548110610a625760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b1a5cdd1a5b99c8125160721b6044820152606401610643565b600081815260056020526040902060018101546001600160a01b03163314610adb5760405162461bcd60e51b815260206004820152602660248201527f4f6e6c79207468652073656c6c65722063616e2063616e63656c20746865206c604482015265697374696e6760d01b6064820152608401610643565b600481015460ff16610b275760405162461bcd60e51b81526020600482015260156024820152744c697374696e67206973206e6f742061637469766560581b6044820152606401610643565b60028054908201546040516323b872dd60e01b815230600482015233602482015260448101919091526101009091046001600160a01b0316906323b872dd90606401600060405180830381600087803b158015610b8357600080fd5b505af1158015610b97573d6000803e3d6000fd5b5050505060048101805460ff191690556002810154600382015460408051918252602082018190526009828201526818d85b98d95b1b195960ba1b606083015251339185917f4365cb53484debef7671e094e8cead2a45d4b329d842264eb2c68b1f1f46d3a39181900360800190a45050565b610c1261135b565b610c1a6113b5565b565b610c2461135b565b610c1a6000611407565b610c3661135b565b610c1a611457565b6060610c48611315565b6000805b600654811015610c865760008181526005602052604090206004015460ff1615610c7e5781610c7a816119c2565b9250505b600101610c4c565b508067ffffffffffffffff811115610ca057610ca061150e565b604051908082528060200260200182016040528015610d0e57816020015b610cfb6040518060a001604052806000815260200160006001600160a01b0316815260200160008152602001600081526020016000151581525090565b815260200190600190039081610cbe5790505b5091506000805b600654811015610dc85760008181526005602052604090206004015460ff1615610dc057600081815260056020908152604091829020825160a0810184528154815260018201546001600160a01b0316928101929092526002810154928201929092526003820154606082015260049091015460ff16151560808201528451859084908110610da657610da66119db565b60200260200101819052508180610dbc906119c2565b9250505b600101610d15565b50505090565b610dd661135b565b610dde611315565b6064811115610e2f5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420636f6d6d697373696f6e2070657263656e746167650000006044820152606401610643565b60038190556040518181527f7e3665a83046ac3c4ec146cf309edab9d75086c48761909ce868f5c65743f4f19060200160405180910390a150565b610e72611315565b6002546040516331a9108f60e11b815260048101849052339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610ec0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee491906119f1565b6001600160a01b031614610f305760405162461bcd60e51b815260206004820152601360248201527213db9b1e481bdddb995c8818d85b881cd95b1b606a1b6044820152606401610643565b6002546040516323b872dd60e01b8152336004820152306024820152604481018490526101009091046001600160a01b0316906323b872dd90606401600060405180830381600087803b158015610f8657600080fd5b505af1158015610f9a573d6000803e3d6000fd5b50506040805160a081018252600680548083523360208085018281528587018b815260608088018c815260016080808b018281526000998a5260058852988c90209a518b559451908a0180546001600160a01b0319166001600160a01b03909216919091179055915160028901559051600388015593516004909601805460ff191696151596909617909555835486518a815291820187905295810193909352651b1a5cdd195960d21b9183019190915287955093507f1874edc4dd8ef51672d2c7645e73e04998f9bed81a6dbc28eb3dc65a06d725bf910160405180910390a46006805490600061108b836119c2565b91905055505050565b61109c61135b565b6110a4611315565b60028054610100600160a81b0319166101006001600160a01b038416908102919091179091556040517ff2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb990600090a250565b6110fe6112bc565b611106611315565b6000816007546111169190611904565b905080341461117b5760405162461bcd60e51b815260206004820152602b60248201527f4d7573742073656e6420746865206578616374206d696e74207072696365206660448201526a6f7220616c6c204e46547360a81b6064820152608401610643565b60005b828110156111f3576002546040516340d097c360e01b81523360048201526101009091046001600160a01b0316906340d097c390602401600060405180830381600087803b1580156111cf57600080fd5b505af11580156111e3573d6000803e3d6000fd5b50506001909201915061117e9050565b50604080518381526020810183905233917ff7ef44022af801ee362390dbe22b2c145e7dfc5e2b651b22e2b1d486b161e654910160405180910390a25061072460018055565b61124161135b565b6001600160a01b0381166112a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610643565b61072481611407565b6112b761135b565b600755565b60026001540361130e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610643565b6002600155565b60025460ff1615610c1a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610643565b6000546001600160a01b03163314610c1a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610643565b6113bd611494565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61145f611315565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113ea3390565b60025460ff16610c1a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610643565b6000602082840312156114ef57600080fd5b81356001600160e01b03198116811461150757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561154d5761154d61150e565b604052919050565b600067ffffffffffffffff83111561156f5761156f61150e565b611582601f8401601f1916602001611524565b905082815283838301111561159657600080fd5b828260208301376000602084830101529392505050565b6000602082840312156115bf57600080fd5b813567ffffffffffffffff8111156115d657600080fd5b8201601f810184136115e757600080fd5b6115f684823560208401611555565b949350505050565b60006020828403121561161057600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561168357815180518552868101516001600160a01b03168786015285810151868601526060808201519086015260809081015115159085015260a09093019290850190600101611634565b5091979650505050505050565b600080604083850312156116a357600080fd5b50508035926020909101359150565b6001600160a01b038116811461072457600080fd5b6000602082840312156116d957600080fd5b8135611507816116b2565b600082601f8301126116f557600080fd5b8135602067ffffffffffffffff8211156117115761171161150e565b8160051b611720828201611524565b928352848101820192828101908785111561173a57600080fd5b83870192505b8483101561175957823582529183019190830190611740565b979650505050505050565b600082601f83011261177557600080fd5b61150783833560208501611555565b600080600080600060a0868803121561179c57600080fd5b85356117a7816116b2565b945060208601356117b7816116b2565b9350604086013567ffffffffffffffff808211156117d457600080fd5b6117e089838a016116e4565b945060608801359150808211156117f657600080fd5b61180289838a016116e4565b9350608088013591508082111561181857600080fd5b5061182588828901611764565b9150509295509295909350565b600080600080600060a0868803121561184a57600080fd5b8535611855816116b2565b94506020860135611865816116b2565b93506040860135925060608601359150608086013567ffffffffffffffff81111561188f57600080fd5b61182588828901611764565b60005b838110156118b657818101518382015260200161189e565b50506000910152565b600082516118d181846020870161189b565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561056f5761056f6118db565b808202811582820484141761056f5761056f6118db565b60008261193857634e487b7160e01b600052601260045260246000fd5b500490565b6000815180845261195581602086016020860161189b565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906115f69083018461193d565b6040815260006119a0604083018561193d565b90508260208301529392505050565b8181038181111561056f5761056f6118db565b6000600182016119d4576119d46118db565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611a0357600080fd5b8151611507816116b256fea2646970667358221220ae3f05dafbc4d36618f66c1e9382bd4817e671cc46ae83d53c3cdd528ba7ede864736f6c63430008170033";

export class AvatarMarketplace__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nftContractAddress: string,
    _commissionPercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AvatarMarketplace> {
    return super.deploy(
      _nftContractAddress,
      _commissionPercentage,
      overrides || {}
    ) as Promise<AvatarMarketplace>;
  }
  getDeployTransaction(
    _nftContractAddress: string,
    _commissionPercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftContractAddress,
      _commissionPercentage,
      overrides || {}
    );
  }
  attach(address: string): AvatarMarketplace {
    return super.attach(address) as AvatarMarketplace;
  }
  connect(signer: Signer): AvatarMarketplace__factory {
    return super.connect(signer) as AvatarMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AvatarMarketplaceInterface {
    return new utils.Interface(_abi) as AvatarMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AvatarMarketplace {
    return new Contract(address, _abi, signerOrProvider) as AvatarMarketplace;
  }
}
