/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AvatarSmashEvent,
  AvatarSmashEventInterface,
} from "../AvatarSmashEvent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fightId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numWinners",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "prizeDistribution",
        type: "uint256[]",
      },
    ],
    name: "FightCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fightId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "avatarOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "FighterEnteredMatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fightId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "winningIds",
        type: "uint256[]",
      },
    ],
    name: "MatchEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fightId",
        type: "uint256",
      },
    ],
    name: "MatchStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_prizeDistribution",
        type: "uint256[]",
      },
    ],
    name: "createFight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fightId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_winningIds",
        type: "uint256[]",
      },
    ],
    name: "endMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fightId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "enterFighterInFight",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fights",
    outputs: [
      {
        internalType: "uint256",
        name: "fightId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPrizePool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numWinners",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minParticipants",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fightId",
        type: "uint256",
      },
    ],
    name: "getMatchStatus",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fightId",
        type: "uint256",
      },
    ],
    name: "getRaceResults",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fightId",
        type: "uint256",
      },
    ],
    name: "isEndedMatch",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftToken",
    outputs: [
      {
        internalType: "contract AvatarNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fightId",
        type: "uint256",
      },
    ],
    name: "startMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161145b38038061145b83398101604081905261002f916100ba565b6100383361006a565b6000805460ff60a01b19169055600180546001600160a01b0319166001600160a01b03929092169190911790556100ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cc57600080fd5b81516001600160a01b03811681146100e357600080fd5b9392505050565b611362806100f96000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063d06fcba811610059578063d06fcba8146102cd578063dee1f3f1146102ed578063f2fde38b1461030d578063f76bdb1a1461032d57600080fd5b80638da5cb5b1461023b578063a1432c531461026d578063bf0188ec1461028d578063bf725a84146102ad57600080fd5b80635c975abb116100c65780635c975abb146101c6578063715018a6146101f15780637d6d1748146102065780638456cb591461022657600080fd5b80632847b790146100ed5780633f4ba83a146101025780634315e72314610117575b600080fd5b6101006100fb366004611068565b61035a565b005b34801561010e57600080fd5b50610100610501565b34801561012357600080fd5b5061018061013236600461108a565b600360208190526000918252604090912080546001820154600283015493830154600584015460069094015492949193919290919060ff808216916101008104821691620100009091041688565b6040805198895260208901979097529587019490945260608601929092526080850152151560a0840152151560c0830152151560e0820152610100015b60405180910390f35b3480156101d257600080fd5b50600054600160a01b900460ff165b60405190151581526020016101bd565b3480156101fd57600080fd5b50610100610513565b34801561021257600080fd5b506101006102213660046110b9565b610525565b34801561023257600080fd5b50610100610775565b34801561024757600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101bd565b34801561027957600080fd5b506101e161028836600461108a565b610785565b34801561029957600080fd5b506101006102a83660046110b9565b6107f6565b3480156102b957600080fd5b506101006102c836600461108a565b610af0565b3480156102d957600080fd5b50600154610255906001600160a01b031681565b3480156102f957600080fd5b506101e161030836600461108a565b610bda565b34801561031957600080fd5b50610100610328366004611198565b610c5f565b34801561033957600080fd5b5061034d61034836600461108a565b610cd8565b6040516101bd91906111f1565b610362610dac565b600082815260036020526040902061037983610bda565b61039e5760405162461bcd60e51b815260040161039590611204565b60405180910390fd5b336103a883610df9565b6001600160a01b0316146103ea5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610395565b806001015434146104335760405162461bcd60e51b8152602060048201526013602482015272496e636f727265637420656e7472792066656560681b6044820152606401610395565b60088101546014116104875760405162461bcd60e51b815260206004820152601960248201527f4d6178207061727469636970616e7473206578636565646564000000000000006044820152606401610395565b3481600201600082825461049b919061125d565b909155505060088101805460018101825560009182526020918290200183905560408051858152339281019290925281018390527fd40e4321fade2997b500bc8cded7b5c8a4304cf8cc6bd2c430e8dde58af049809060600160405180910390a1505050565b610509610e76565b610511610ed0565b565b61051b610e76565b6105116000610f25565b61052d610e76565b610535610dac565b60008281526003602052604090206006810154610100900460ff166105905760405162461bcd60e51b8152602060048201526011602482015270119a59da1d081b9bdd081cdd185c9d1959607a1b6044820152606401610395565b80600301548251146105e45760405162461bcd60e51b815260206004820152601b60248201527f496e636f7272656374206e756d626572206f662077696e6e65727300000000006044820152606401610395565b60068101805462ffffff191662010000179055815161060c9060078301906020850190611008565b5060006064826002015460506106229190611270565b61062c9190611287565b905060005b82600301548110156107355760006064846004018381548110610656576106566112a9565b90600052602060002001548461066c9190611270565b6106769190611287565b9050600061069c86848151811061068f5761068f6112a9565b6020026020010151610df9565b90506001600160a01b0381166106f45760405162461bcd60e51b815260206004820152601960248201527f57696e6e6572206e6f7420666f756e6420696e206669676874000000000000006044820152606401610395565b6040516001600160a01b0382169083156108fc029084906000818181858888f1935050505015801561072a573d6000803e3d6000fd5b505050600101610631565b507fa825012d43998fffb4f7c88942d56d79e33a5a1f46bcdcc5fbadcb05dbceec4f84846040516107679291906112bf565b60405180910390a150505050565b61077d610e76565b610511610f75565b600061078f610dac565b60025482106107d75760405162461bcd60e51b8152602060048201526014602482015273119a59da1d08191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610395565b5060009081526003602052604090206006015462010000900460ff1690565b6107fe610e76565b610806610dac565b8051600090815b835181101561084557838181518110610828576108286112a9565b60200260200101518361083b919061125d565b925060010161080d565b5060648211156108975760405162461bcd60e51b815260206004820152601f60248201527f546f74616c20646973747269627574696f6e20657863656564732031303025006044820152606401610395565b60648210156108f25760405162461bcd60e51b815260206004820152602160248201527f546f74616c20646973747269627574696f6e206c657373207468616e203130306044820152602560f81b6064820152608401610395565b600581111561093b5760405162461bcd60e51b815260206004820152601560248201527413585e080d481dda5b9b995c9cc8185b1b1bddd959605a1b6044820152606401610395565b600061094660025490565b9050604051806101600160405280828152602001868152602001600081526020018381526020018581526020018360036109809190611270565b8152600160208083019190915260006040808401829052606084018290528051828152808401825260808501528051828152928301905260a0909201915090526000828152600360208181526040928390208451815584820151600182015592840151600284015560608401519183019190915560808301518051610a0b9260048501920190611008565b5060a0820151600582015560c082015160068201805460e08501516101008087015161ffff1990931694151561ff001916949094179015159093029290921762ff0000191662010000921515929092029190911790556101208201518051610a7d916007840191602090910190611008565b506101408201518051610a9a916008840191602090910190611008565b509050507f2cd55bcf498112cb1f13dd79fe3cf119ffe989aac0ef32485aa1b4f1fe04f8c481868487604051610ad394939291906112e0565b60405180910390a1610ae9600280546001019055565b5050505050565b610af8610e76565b610b00610dac565b6000818152600360205260409020610b1782610bda565b610b335760405162461bcd60e51b815260040161039590611204565b600581015460088201541015610b8b5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768207061727469636970616e74730000000000000000006044820152606401610395565b60068101805461ff0019166101001790556040517fb94815bc897678aff1a4b2af4335727acb3b957640bdb895415ba9b79ada1e2e90610bce9084815260200190565b60405180910390a15050565b6000610be4610dac565b6002548210610c2c5760405162461bcd60e51b8152602060048201526014602482015273119a59da1d08191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610395565b6000828152600360205260409020600681015460ff168015610c5857506006810154610100900460ff16155b9392505050565b610c67610e76565b6001600160a01b038116610ccc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610395565b610cd581610f25565b50565b6060610ce2610dac565b60008281526003602052604090206006015462010000900460ff16610d495760405162461bcd60e51b815260206004820152601760248201527f466967687420686173206e6f7420656e646564207965740000000000000000006044820152606401610395565b60008281526003602090815260409182902060070180548351818402810184019094528084529091830182828015610da057602002820191906000526020600020905b815481526020019060010190808311610d8c575b50505050509050919050565b600054600160a01b900460ff16156105115760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610395565b6000610e03610dac565b6001546040516331a9108f60e11b8152600481018490526001600160a01b0390911690636352211e90602401602060405180830381865afa158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e70919061130f565b92915050565b6000546001600160a01b031633146105115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610395565b610ed8610fb8565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f7d610dac565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f083390565b600054600160a01b900460ff166105115760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610395565b828054828255906000526020600020908101928215611043579160200282015b82811115611043578251825591602001919060010190611028565b5061104f929150611053565b5090565b5b8082111561104f5760008155600101611054565b6000806040838503121561107b57600080fd5b50508035926020909101359150565b60006020828403121561109c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156110cc57600080fd5b8235915060208084013567ffffffffffffffff808211156110ec57600080fd5b818601915086601f83011261110057600080fd5b813581811115611112576111126110a3565b8060051b604051601f19603f83011681018181108582111715611137576111376110a3565b60405291825284820192508381018501918983111561115557600080fd5b938501935b828510156111735784358452938501939285019261115a565b8096505050505050509250929050565b6001600160a01b0381168114610cd557600080fd5b6000602082840312156111aa57600080fd5b8135610c5881611183565b60008151808452602080850194506020840160005b838110156111e6578151875295820195908201906001016111ca565b509495945050505050565b602081526000610c5860208301846111b5565b60208082526023908201527f4669676874206e6f7420616374697665206f7220616c726561647920737461726040820152621d195960ea1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610e7057610e70611247565b8082028115828204841417610e7057610e70611247565b6000826112a457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b8281526040602082015260006112d860408301846111b5565b949350505050565b84815283602082015282604082015260806060820152600061130560808301846111b5565b9695505050505050565b60006020828403121561132157600080fd5b8151610c588161118356fea26469706673582212206f82899fcd5757b18457cbcd48fc072f1c8d0ad0648e7fff07a09572fb402bac64736f6c63430008170033";

export class AvatarSmashEvent__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nftContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AvatarSmashEvent> {
    return super.deploy(
      _nftContractAddress,
      overrides || {}
    ) as Promise<AvatarSmashEvent>;
  }
  getDeployTransaction(
    _nftContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nftContractAddress, overrides || {});
  }
  attach(address: string): AvatarSmashEvent {
    return super.attach(address) as AvatarSmashEvent;
  }
  connect(signer: Signer): AvatarSmashEvent__factory {
    return super.connect(signer) as AvatarSmashEvent__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AvatarSmashEventInterface {
    return new utils.Interface(_abi) as AvatarSmashEventInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AvatarSmashEvent {
    return new Contract(address, _abi, signerOrProvider) as AvatarSmashEvent;
  }
}
