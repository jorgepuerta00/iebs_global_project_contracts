/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AvatarRacingEvent,
  AvatarRacingEventInterface,
} from "../AvatarRacingEvent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "horseOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "HorseEnteredRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "horseOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "HorseWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numWinners",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "prizeDistribution",
        type: "uint256[]",
      },
    ],
    name: "RaceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "winningHorseId",
        type: "uint256[]",
      },
    ],
    name: "RaceEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "RaceStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "prizeDistribution",
        type: "uint256[]",
      },
    ],
    name: "createRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "winningHorseIds",
        type: "uint256[]",
      },
    ],
    name: "endRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "enterHorseInRace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "getRaceResults",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "getRaceStatus",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "isEndedRace",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftToken",
    outputs: [
      {
        internalType: "contract AvatarNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPrizePool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numWinners",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minParticipants",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "startRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161147d38038061147d83398101604081905261002f916100ba565b6100383361006a565b6000805460ff60a01b19169055600180546001600160a01b0319166001600160a01b03929092169190911790556100ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cc57600080fd5b81516001600160a01b03811681146100e357600080fd5b9392505050565b611384806100f96000396000f3fe6080604052600436106100e85760003560e01c80637bbc469e1161008a578063d06fcba811610059578063d06fcba8146102de578063f2fde38b146102fe578063f76bdb1a1461031e578063fa47723a1461034b57600080fd5b80637bbc469e146101cd5780638456cb59146102775780638da5cb5b1461028c5780638fa03b48146102be57600080fd5b8063315aa38c116100c6578063315aa38c146101645780633f4ba83a146101845780635c975abb14610199578063715018a6146101b857600080fd5b80630116538f146100ed57806324d822bf14610122578063287b12f114610144575b600080fd5b3480156100f957600080fd5b5061010d610108366004611073565b61035e565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b5061014261013d366004611073565b6103e7565b005b34801561015057600080fd5b5061010d61015f366004611073565b6104d1565b34801561017057600080fd5b5061014261017f3660046110a2565b610541565b34801561019057600080fd5b5061014261079b565b3480156101a557600080fd5b50600054600160a01b900460ff1661010d565b3480156101c457600080fd5b506101426107ad565b3480156101d957600080fd5b506102366101e8366004611073565b600360208190526000918252604090912080546001820154600283015493830154600584015460069094015492949193919290919060ff808216916101008104821691620100009091041688565b6040805198895260208901979097529587019490945260608601929092526080850152151560a0840152151560c0830152151560e082015261010001610119565b34801561028357600080fd5b506101426107bf565b34801561029857600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610119565b3480156102ca57600080fd5b506101426102d93660046110a2565b6107cf565b3480156102ea57600080fd5b506001546102a6906001600160a01b031681565b34801561030a57600080fd5b50610142610319366004611181565b610ad3565b34801561032a57600080fd5b5061033e610339366004611073565b610b4c565b60405161011991906111d9565b6101426103593660046111ec565b610c19565b6000610368610db7565b60025482106103b45760405162461bcd60e51b8152602060048201526013602482015272149858d948191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064015b60405180910390fd5b6000828152600360205260409020600681015460ff1680156103e057506006810154610100900460ff16155b9392505050565b6103ef610e04565b6103f7610db7565b600081815260036020526040902061040e8261035e565b61042a5760405162461bcd60e51b81526004016103ab9061120e565b6005810154600882015410156104825760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768207061727469636970616e747300000000000000000060448201526064016103ab565b60068101805461ff0019166101001790556040517fd8a537561d247cabc83980738b2fd3771513f9b3a4b696b3fead967d36efe7da906104c59084815260200190565b60405180910390a15050565b60006104db610db7565b60025482106105225760405162461bcd60e51b8152602060048201526013602482015272149858d948191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016103ab565b5060009081526003602052604090206006015462010000900460ff1690565b610549610e04565b610551610db7565b60008281526003602052604090206006810154610100900460ff166105ab5760405162461bcd60e51b815260206004820152601060248201526f149858d9481b9bdd081cdd185c9d195960821b60448201526064016103ab565b80600301548251146105ff5760405162461bcd60e51b815260206004820152601b60248201527f496e636f7272656374206e756d626572206f662077696e6e657273000000000060448201526064016103ab565b60068101805462ffffff19166201000017905581516106279060078301906020850190611013565b50600060648260020154605061063d9190611266565b610647919061127d565b905060005b826003015481101561075b57600060648460040183815481106106715761067161129f565b9060005260206000200154846106879190611266565b610691919061127d565b905060006106b78684815181106106aa576106aa61129f565b6020026020010151610e5e565b90506001600160a01b03811661070f5760405162461bcd60e51b815260206004820152601860248201527f57696e6e6572206e6f7420666f756e6420696e2072616365000000000000000060448201526064016103ab565b6040516001600160a01b0382169083156108fc029084906000818181858888f19350505050158015610745573d6000803e3d6000fd5b5050508080610753906112b5565b91505061064c565b507f7aed510e5c2fdcd342c5cef991b106a3986e8d20d22e489ae5c9a0d18d597152848460405161078d9291906112ce565b60405180910390a150505050565b6107a3610e04565b6107ab610edb565b565b6107b5610e04565b6107ab6000610f30565b6107c7610e04565b6107ab610f80565b6107d7610e04565b6107df610db7565b8051600090815b8351811015610828578381815181106108015761080161129f565b60200260200101518361081491906112ef565b925080610820816112b5565b9150506107e6565b50606482111561087a5760405162461bcd60e51b815260206004820152601f60248201527f546f74616c20646973747269627574696f6e206578636565647320313030250060448201526064016103ab565b60648210156108d55760405162461bcd60e51b815260206004820152602160248201527f546f74616c20646973747269627574696f6e206c657373207468616e203130306044820152602560f81b60648201526084016103ab565b600581111561091e5760405162461bcd60e51b815260206004820152601560248201527413585e080d481dda5b9b995c9cc8185b1b1bddd959605a1b60448201526064016103ab565b600061092960025490565b9050604051806101600160405280828152602001868152602001600081526020018381526020018581526020018360036109639190611266565b8152600160208083019190915260006040808401829052606084018290528051828152808401825260808501528051828152928301905260a09092019150905260008281526003602081815260409283902084518155848201516001820155928401516002840155606084015191830191909155608083015180516109ee9260048501920190611013565b5060a0820151600582015560c082015160068201805460e08501516101008087015161ffff1990931694151561ff001916949094179015159093029290921762ff0000191662010000921515929092029190911790556101208201518051610a60916007840191602090910190611013565b506101408201518051610a7d916008840191602090910190611013565b509050507fd353319d8f5cef7e55b32e749160eb2a2d9ee2076bea05ff3a44c760c392910581868487604051610ab69493929190611302565b60405180910390a1610acc600280546001019055565b5050505050565b610adb610e04565b6001600160a01b038116610b405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ab565b610b4981610f30565b50565b6060610b56610db7565b60008281526003602052604090206006015462010000900460ff16610bb65760405162461bcd60e51b8152602060048201526016602482015275149858d9481a185cc81b9bdd08195b991959081e595d60521b60448201526064016103ab565b60008281526003602090815260409182902060070180548351818402810184019094528084529091830182828015610c0d57602002820191906000526020600020905b815481526020019060010190808311610bf9575b50505050509050919050565b610c21610db7565b6000828152600360205260409020610c388361035e565b610c545760405162461bcd60e51b81526004016103ab9061120e565b33610c5e83610e5e565b6001600160a01b031614610ca05760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064016103ab565b80600101543414610ce95760405162461bcd60e51b8152602060048201526013602482015272496e636f727265637420656e7472792066656560681b60448201526064016103ab565b6008810154601411610d3d5760405162461bcd60e51b815260206004820152601960248201527f4d6178207061727469636970616e74732065786365656465640000000000000060448201526064016103ab565b34816002016000828254610d5191906112ef565b909155505060088101805460018101825560009182526020918290200183905560408051858152339281019290925281018390527f9ce334b4c8b04bea9c08533da5d64964ae1e53e1c9152c5749044adad3f62b289060600160405180910390a1505050565b600054600160a01b900460ff16156107ab5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103ab565b6000546001600160a01b031633146107ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ab565b6000610e68610db7565b6001546040516331a9108f60e11b8152600481018490526001600160a01b0390911690636352211e90602401602060405180830381865afa158015610eb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed59190611331565b92915050565b610ee3610fc3565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f88610db7565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f133390565b600054600160a01b900460ff166107ab5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103ab565b82805482825590600052602060002090810192821561104e579160200282015b8281111561104e578251825591602001919060010190611033565b5061105a92915061105e565b5090565b5b8082111561105a576000815560010161105f565b60006020828403121561108557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156110b557600080fd5b8235915060208084013567ffffffffffffffff808211156110d557600080fd5b818601915086601f8301126110e957600080fd5b8135818111156110fb576110fb61108c565b8060051b604051601f19603f830116810181811085821117156111205761112061108c565b60405291825284820192508381018501918983111561113e57600080fd5b938501935b8285101561115c57843584529385019392850192611143565b8096505050505050509250929050565b6001600160a01b0381168114610b4957600080fd5b60006020828403121561119357600080fd5b81356103e08161116c565b600081518084526020808501945080840160005b838110156111ce578151875295820195908201906001016111b2565b509495945050505050565b6020815260006103e0602083018461119e565b600080604083850312156111ff57600080fd5b50508035926020909101359150565b60208082526022908201527f52616365206e6f7420616374697665206f7220616c7265616479207374617274604082015261195960f21b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ed557610ed5611250565b60008261129a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600182016112c7576112c7611250565b5060010190565b8281526040602082015260006112e7604083018461119e565b949350505050565b80820180821115610ed557610ed5611250565b848152836020820152826040820152608060608201526000611327608083018461119e565b9695505050505050565b60006020828403121561134357600080fd5b81516103e08161116c56fea26469706673582212200d2d945c60081f468268e4f47d3ac8c3047495878ab30495d322667b9e2795ee64736f6c63430008150033";

export class AvatarRacingEvent__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nftContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AvatarRacingEvent> {
    return super.deploy(
      _nftContractAddress,
      overrides || {}
    ) as Promise<AvatarRacingEvent>;
  }
  getDeployTransaction(
    _nftContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nftContractAddress, overrides || {});
  }
  attach(address: string): AvatarRacingEvent {
    return super.attach(address) as AvatarRacingEvent;
  }
  connect(signer: Signer): AvatarRacingEvent__factory {
    return super.connect(signer) as AvatarRacingEvent__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AvatarRacingEventInterface {
    return new utils.Interface(_abi) as AvatarRacingEventInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AvatarRacingEvent {
    return new Contract(address, _abi, signerOrProvider) as AvatarRacingEvent;
  }
}
